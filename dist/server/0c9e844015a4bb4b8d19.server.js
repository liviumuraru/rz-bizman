/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/server/server.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/reflect-metadata/Reflect.js":
/*!**************************************************!*\
  !*** ./node_modules/reflect-metadata/Reflect.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n\n\n//# sourceURL=webpack:///./node_modules/reflect-metadata/Reflect.js?");

/***/ }),

/***/ "./src/server/entity/character.entity.ts":
/*!***********************************************!*\
  !*** ./src/server/entity/character.entity.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Character = void 0;\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nconst organisation_request_ownership_quantum_entity_1 = __webpack_require__(/*! ./organisation-request-ownership-quantum.entity */ \"./src/server/entity/organisation-request-ownership-quantum.entity.ts\");\r\nconst organisation_request_entity_1 = __webpack_require__(/*! ./organisation-request.entity */ \"./src/server/entity/organisation-request.entity.ts\");\r\nconst organisation_entity_1 = __webpack_require__(/*! ./organisation.entity */ \"./src/server/entity/organisation.entity.ts\");\r\nconst player_entity_1 = __webpack_require__(/*! ./player.entity */ \"./src/server/entity/player.entity.ts\");\r\nconst role_entity_1 = __webpack_require__(/*! ./role.entity */ \"./src/server/entity/role.entity.ts\");\r\nlet Character = class Character {\r\n};\r\n__decorate([\r\n    typeorm_1.PrimaryGeneratedColumn({\r\n        name: \"id\",\r\n        type: \"int\"\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], Character.prototype, \"id\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"first_name\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Character.prototype, \"firstName\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"last_name\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Character.prototype, \"lastName\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToOne(type => player_entity_1.Player, player => player.characters),\r\n    __metadata(\"design:type\", player_entity_1.Player)\r\n], Character.prototype, \"player\", void 0);\r\n__decorate([\r\n    typeorm_1.JoinTable({\r\n        name: \"characters_roles\"\r\n    }),\r\n    typeorm_1.ManyToMany(type => role_entity_1.Role, role => role.characters),\r\n    __metadata(\"design:type\", Array)\r\n], Character.prototype, \"roles\", void 0);\r\n__decorate([\r\n    typeorm_1.JoinTable({\r\n        name: \"characters_organisations\"\r\n    }),\r\n    typeorm_1.ManyToMany(() => organisation_entity_1.Organisation, org => org.characters),\r\n    __metadata(\"design:type\", Array)\r\n], Character.prototype, \"organisations\", void 0);\r\n__decorate([\r\n    typeorm_1.OneToMany(() => organisation_request_entity_1.OrganisationRequest, orgReq => orgReq.creator),\r\n    __metadata(\"design:type\", Array)\r\n], Character.prototype, \"organisationRequests\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToMany(() => organisation_entity_1.Organisation, org => org.characters),\r\n    __metadata(\"design:type\", Array)\r\n], Character.prototype, \"organisationRequestsAsParticipant\", void 0);\r\n__decorate([\r\n    typeorm_1.OneToMany(() => organisation_request_ownership_quantum_entity_1.OrganisationRequestOwnershipQuantum, orgReqOQ => orgReqOQ.character),\r\n    __metadata(\"design:type\", Array)\r\n], Character.prototype, \"organisationRequestOwnershipQuantum\", void 0);\r\nCharacter = __decorate([\r\n    typeorm_1.Entity({ name: \"characters\" })\r\n], Character);\r\nexports.Character = Character;\r\n\n\n//# sourceURL=webpack:///./src/server/entity/character.entity.ts?");

/***/ }),

/***/ "./src/server/entity/index.ts":
/*!************************************!*\
  !*** ./src/server/entity/index.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Role = exports.Permission = exports.Organisation = exports.Player = exports.Character = void 0;\r\n__webpack_require__(/*! reflect-metadata */ \"./node_modules/reflect-metadata/Reflect.js\");\r\nvar character_entity_1 = __webpack_require__(/*! ./character.entity */ \"./src/server/entity/character.entity.ts\");\r\nObject.defineProperty(exports, \"Character\", { enumerable: true, get: function () { return character_entity_1.Character; } });\r\nvar player_entity_1 = __webpack_require__(/*! ./player.entity */ \"./src/server/entity/player.entity.ts\");\r\nObject.defineProperty(exports, \"Player\", { enumerable: true, get: function () { return player_entity_1.Player; } });\r\nvar organisation_entity_1 = __webpack_require__(/*! ./organisation.entity */ \"./src/server/entity/organisation.entity.ts\");\r\nObject.defineProperty(exports, \"Organisation\", { enumerable: true, get: function () { return organisation_entity_1.Organisation; } });\r\nvar permission_entity_1 = __webpack_require__(/*! ./permission.entity */ \"./src/server/entity/permission.entity.ts\");\r\nObject.defineProperty(exports, \"Permission\", { enumerable: true, get: function () { return permission_entity_1.Permission; } });\r\nvar role_entity_1 = __webpack_require__(/*! ./role.entity */ \"./src/server/entity/role.entity.ts\");\r\nObject.defineProperty(exports, \"Role\", { enumerable: true, get: function () { return role_entity_1.Role; } });\r\n\n\n//# sourceURL=webpack:///./src/server/entity/index.ts?");

/***/ }),

/***/ "./src/server/entity/organisation-request-chat.entity.ts":
/*!***************************************************************!*\
  !*** ./src/server/entity/organisation-request-chat.entity.ts ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrganisationRequestChat = void 0;\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nconst organisation_request_message_entity_1 = __webpack_require__(/*! ./organisation-request-message.entity */ \"./src/server/entity/organisation-request-message.entity.ts\");\r\nconst organisation_request_entity_1 = __webpack_require__(/*! ./organisation-request.entity */ \"./src/server/entity/organisation-request.entity.ts\");\r\nlet OrganisationRequestChat = class OrganisationRequestChat {\r\n};\r\n__decorate([\r\n    typeorm_1.PrimaryGeneratedColumn({\r\n        name: \"id\",\r\n        type: \"int\"\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], OrganisationRequestChat.prototype, \"id\", void 0);\r\n__decorate([\r\n    typeorm_1.OneToOne(() => organisation_request_entity_1.OrganisationRequest, orgReq => orgReq.chat),\r\n    __metadata(\"design:type\", organisation_request_entity_1.OrganisationRequest)\r\n], OrganisationRequestChat.prototype, \"organisationRequest\", void 0);\r\n__decorate([\r\n    typeorm_1.OneToMany(() => organisation_request_message_entity_1.OrganisationRequestChatMessage, orgReqChatMessage => orgReqChatMessage.chat),\r\n    __metadata(\"design:type\", Array)\r\n], OrganisationRequestChat.prototype, \"messages\", void 0);\r\nOrganisationRequestChat = __decorate([\r\n    typeorm_1.Entity({ name: \"organisation_request_chats\" })\r\n], OrganisationRequestChat);\r\nexports.OrganisationRequestChat = OrganisationRequestChat;\r\n\n\n//# sourceURL=webpack:///./src/server/entity/organisation-request-chat.entity.ts?");

/***/ }),

/***/ "./src/server/entity/organisation-request-message.entity.ts":
/*!******************************************************************!*\
  !*** ./src/server/entity/organisation-request-message.entity.ts ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrganisationRequestChatMessage = void 0;\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nconst character_entity_1 = __webpack_require__(/*! ./character.entity */ \"./src/server/entity/character.entity.ts\");\r\nconst organisation_request_chat_entity_1 = __webpack_require__(/*! ./organisation-request-chat.entity */ \"./src/server/entity/organisation-request-chat.entity.ts\");\r\nlet OrganisationRequestChatMessage = class OrganisationRequestChatMessage {\r\n};\r\n__decorate([\r\n    typeorm_1.PrimaryGeneratedColumn({\r\n        name: \"id\",\r\n        type: \"int\"\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], OrganisationRequestChatMessage.prototype, \"id\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 2048,\r\n        type: \"varchar\",\r\n        name: \"message\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], OrganisationRequestChatMessage.prototype, \"message\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        type: \"datetime\",\r\n        name: \"datetime\",\r\n        nullable: false\r\n    }),\r\n    __metadata(\"design:type\", Date)\r\n], OrganisationRequestChatMessage.prototype, \"datetime\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToOne(() => character_entity_1.Character),\r\n    __metadata(\"design:type\", character_entity_1.Character)\r\n], OrganisationRequestChatMessage.prototype, \"sender\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToOne(() => organisation_request_chat_entity_1.OrganisationRequestChat, chat => chat.messages),\r\n    __metadata(\"design:type\", organisation_request_chat_entity_1.OrganisationRequestChat)\r\n], OrganisationRequestChatMessage.prototype, \"chat\", void 0);\r\nOrganisationRequestChatMessage = __decorate([\r\n    typeorm_1.Entity({ name: \"organisation_request_chats_messages\" })\r\n], OrganisationRequestChatMessage);\r\nexports.OrganisationRequestChatMessage = OrganisationRequestChatMessage;\r\n\n\n//# sourceURL=webpack:///./src/server/entity/organisation-request-message.entity.ts?");

/***/ }),

/***/ "./src/server/entity/organisation-request-ownership-quantum.entity.ts":
/*!****************************************************************************!*\
  !*** ./src/server/entity/organisation-request-ownership-quantum.entity.ts ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrganisationRequestOwnershipQuantum = void 0;\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nconst character_entity_1 = __webpack_require__(/*! ./character.entity */ \"./src/server/entity/character.entity.ts\");\r\nconst organisation_request_entity_1 = __webpack_require__(/*! ./organisation-request.entity */ \"./src/server/entity/organisation-request.entity.ts\");\r\nlet OrganisationRequestOwnershipQuantum = class OrganisationRequestOwnershipQuantum {\r\n};\r\n__decorate([\r\n    typeorm_1.PrimaryGeneratedColumn({\r\n        name: \"id\",\r\n        type: \"int\"\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], OrganisationRequestOwnershipQuantum.prototype, \"id\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToOne(() => character_entity_1.Character, character => character.organisationRequestOwnershipQuantum),\r\n    __metadata(\"design:type\", character_entity_1.Character)\r\n], OrganisationRequestOwnershipQuantum.prototype, \"character\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToOne(() => organisation_request_entity_1.OrganisationRequest, orgReq => orgReq),\r\n    __metadata(\"design:type\", organisation_request_entity_1.OrganisationRequest)\r\n], OrganisationRequestOwnershipQuantum.prototype, \"request\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        name: 'flat_shares',\r\n        type: 'int',\r\n        nullable: false\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], OrganisationRequestOwnershipQuantum.prototype, \"flatShares\", void 0);\r\nOrganisationRequestOwnershipQuantum = __decorate([\r\n    typeorm_1.Entity({ name: \"organisation_requests_ownership_quantums\" })\r\n], OrganisationRequestOwnershipQuantum);\r\nexports.OrganisationRequestOwnershipQuantum = OrganisationRequestOwnershipQuantum;\r\n\n\n//# sourceURL=webpack:///./src/server/entity/organisation-request-ownership-quantum.entity.ts?");

/***/ }),

/***/ "./src/server/entity/organisation-request.entity.ts":
/*!**********************************************************!*\
  !*** ./src/server/entity/organisation-request.entity.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrganisationRequest = void 0;\r\nconst character_entity_1 = __webpack_require__(/*! ./character.entity */ \"./src/server/entity/character.entity.ts\");\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nconst orgtype_entity_1 = __webpack_require__(/*! ./orgtype.entity */ \"./src/server/entity/orgtype.entity.ts\");\r\nconst organisation_request_chat_entity_1 = __webpack_require__(/*! ./organisation-request-chat.entity */ \"./src/server/entity/organisation-request-chat.entity.ts\");\r\nconst organisation_request_ownership_quantum_entity_1 = __webpack_require__(/*! ./organisation-request-ownership-quantum.entity */ \"./src/server/entity/organisation-request-ownership-quantum.entity.ts\");\r\nlet OrganisationRequest = class OrganisationRequest {\r\n};\r\n__decorate([\r\n    typeorm_1.PrimaryGeneratedColumn({\r\n        name: \"id\",\r\n        type: \"int\"\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], OrganisationRequest.prototype, \"id\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 4096,\r\n        type: \"varchar\",\r\n        name: \"business_plan\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], OrganisationRequest.prototype, \"businessPlan\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"name\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], OrganisationRequest.prototype, \"name\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"location\",\r\n        nullable: true,\r\n        default: ''\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], OrganisationRequest.prototype, \"location\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        type: \"boolean\",\r\n        name: \"approved\",\r\n        default: false\r\n    }),\r\n    __metadata(\"design:type\", Boolean)\r\n], OrganisationRequest.prototype, \"approved\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        type: \"boolean\",\r\n        name: \"denied\",\r\n        default: false\r\n    }),\r\n    __metadata(\"design:type\", Boolean)\r\n], OrganisationRequest.prototype, \"denied\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        type: \"int\",\r\n        name: \"total_shares\",\r\n        nullable: false,\r\n        default: 100\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], OrganisationRequest.prototype, \"totalShares\", void 0);\r\n__decorate([\r\n    typeorm_1.JoinTable({\r\n        name: \"organisation_requests_types_map\"\r\n    }),\r\n    typeorm_1.ManyToMany(() => orgtype_entity_1.OrgType, orgType => orgType.organisationRequests),\r\n    __metadata(\"design:type\", Array)\r\n], OrganisationRequest.prototype, \"orgTypes\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToOne(() => character_entity_1.Character, char => char.organisationRequests),\r\n    __metadata(\"design:type\", character_entity_1.Character)\r\n], OrganisationRequest.prototype, \"creator\", void 0);\r\n__decorate([\r\n    typeorm_1.JoinTable({\r\n        name: \"organisation_requests_participants\"\r\n    }),\r\n    typeorm_1.ManyToMany(() => character_entity_1.Character, char => char.organisationRequestsAsParticipant),\r\n    __metadata(\"design:type\", Array)\r\n], OrganisationRequest.prototype, \"participants\", void 0);\r\n__decorate([\r\n    typeorm_1.JoinColumn(),\r\n    typeorm_1.OneToOne(() => organisation_request_chat_entity_1.OrganisationRequestChat, orgReqChat => orgReqChat.organisationRequest, {\r\n        nullable: false,\r\n        cascade: ['insert', 'update']\r\n    }),\r\n    __metadata(\"design:type\", organisation_request_chat_entity_1.OrganisationRequestChat)\r\n], OrganisationRequest.prototype, \"chat\", void 0);\r\n__decorate([\r\n    typeorm_1.OneToMany(() => organisation_request_ownership_quantum_entity_1.OrganisationRequestOwnershipQuantum, orgReqOQ => orgReqOQ.request, {\r\n        cascade: ['insert', 'update']\r\n    }),\r\n    __metadata(\"design:type\", Array)\r\n], OrganisationRequest.prototype, \"ownershipQuantums\", void 0);\r\nOrganisationRequest = __decorate([\r\n    typeorm_1.Entity({ name: \"organisation_requests\" })\r\n], OrganisationRequest);\r\nexports.OrganisationRequest = OrganisationRequest;\r\n\n\n//# sourceURL=webpack:///./src/server/entity/organisation-request.entity.ts?");

/***/ }),

/***/ "./src/server/entity/organisation.entity.ts":
/*!**************************************************!*\
  !*** ./src/server/entity/organisation.entity.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Organisation = void 0;\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nconst character_entity_1 = __webpack_require__(/*! ./character.entity */ \"./src/server/entity/character.entity.ts\");\r\nconst orgtype_entity_1 = __webpack_require__(/*! ./orgtype.entity */ \"./src/server/entity/orgtype.entity.ts\");\r\nconst role_entity_1 = __webpack_require__(/*! ./role.entity */ \"./src/server/entity/role.entity.ts\");\r\nlet Organisation = class Organisation {\r\n};\r\n__decorate([\r\n    typeorm_1.PrimaryGeneratedColumn({\r\n        name: \"id\",\r\n        type: \"int\"\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], Organisation.prototype, \"id\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 2048,\r\n        type: \"varchar\",\r\n        name: \"description\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Organisation.prototype, \"description\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"name\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Organisation.prototype, \"name\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"subtitle\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Organisation.prototype, \"subtitle\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        type: \"varchar\",\r\n        length: '2048',\r\n        name: \"image\",\r\n        nullable: true\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Organisation.prototype, \"image\", void 0);\r\n__decorate([\r\n    typeorm_1.JoinTable({\r\n        name: \"organisations_types_map\"\r\n    }),\r\n    typeorm_1.ManyToMany(() => orgtype_entity_1.OrgType, orgType => orgType.organisations),\r\n    __metadata(\"design:type\", Array)\r\n], Organisation.prototype, \"orgTypes\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToMany(() => character_entity_1.Character, character => character.organisations),\r\n    __metadata(\"design:type\", Array)\r\n], Organisation.prototype, \"characters\", void 0);\r\n__decorate([\r\n    typeorm_1.JoinTable({\r\n        name: \"organisations_roles\"\r\n    }),\r\n    typeorm_1.ManyToMany(() => role_entity_1.Role, role => role.organisations),\r\n    __metadata(\"design:type\", Array)\r\n], Organisation.prototype, \"roles\", void 0);\r\nOrganisation = __decorate([\r\n    typeorm_1.Entity({ name: \"organisations\" })\r\n], Organisation);\r\nexports.Organisation = Organisation;\r\n\n\n//# sourceURL=webpack:///./src/server/entity/organisation.entity.ts?");

/***/ }),

/***/ "./src/server/entity/orgtype.entity.ts":
/*!*********************************************!*\
  !*** ./src/server/entity/orgtype.entity.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OrgType = void 0;\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nconst organisation_request_entity_1 = __webpack_require__(/*! ./organisation-request.entity */ \"./src/server/entity/organisation-request.entity.ts\");\r\nconst organisation_entity_1 = __webpack_require__(/*! ./organisation.entity */ \"./src/server/entity/organisation.entity.ts\");\r\nlet OrgType = class OrgType {\r\n};\r\n__decorate([\r\n    typeorm_1.PrimaryGeneratedColumn({\r\n        name: \"id\",\r\n        type: \"int\"\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], OrgType.prototype, \"id\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 2048,\r\n        type: \"varchar\",\r\n        name: \"description\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], OrgType.prototype, \"description\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"name\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], OrgType.prototype, \"name\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToMany(type => organisation_entity_1.Organisation, org => org.orgTypes),\r\n    __metadata(\"design:type\", Array)\r\n], OrgType.prototype, \"organisations\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToMany(type => organisation_request_entity_1.OrganisationRequest, orgReq => orgReq.orgTypes),\r\n    __metadata(\"design:type\", Array)\r\n], OrgType.prototype, \"organisationRequests\", void 0);\r\nOrgType = __decorate([\r\n    typeorm_1.Entity({ name: \"orgtypes\" })\r\n], OrgType);\r\nexports.OrgType = OrgType;\r\n\n\n//# sourceURL=webpack:///./src/server/entity/orgtype.entity.ts?");

/***/ }),

/***/ "./src/server/entity/permission.entity.ts":
/*!************************************************!*\
  !*** ./src/server/entity/permission.entity.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Permission = void 0;\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nlet Permission = class Permission {\r\n};\r\n__decorate([\r\n    typeorm_1.PrimaryGeneratedColumn({\r\n        name: \"id\",\r\n        type: \"int\"\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], Permission.prototype, \"id\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 2048,\r\n        type: \"varchar\",\r\n        name: \"description\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Permission.prototype, \"description\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"name\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Permission.prototype, \"name\", void 0);\r\nPermission = __decorate([\r\n    typeorm_1.Entity({ name: \"permissions\" })\r\n], Permission);\r\nexports.Permission = Permission;\r\n\n\n//# sourceURL=webpack:///./src/server/entity/permission.entity.ts?");

/***/ }),

/***/ "./src/server/entity/player.entity.ts":
/*!********************************************!*\
  !*** ./src/server/entity/player.entity.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Player = void 0;\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nconst character_entity_1 = __webpack_require__(/*! ./character.entity */ \"./src/server/entity/character.entity.ts\");\r\nlet Player = class Player {\r\n};\r\n__decorate([\r\n    typeorm_1.PrimaryGeneratedColumn({\r\n        name: \"id\",\r\n        type: \"int\"\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], Player.prototype, \"id\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"primaryFiveMId\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Player.prototype, \"primaryFiveMId\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"sessionSourceId\",\r\n        nullable: true\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Player.prototype, \"sessionSourceId\", void 0);\r\n__decorate([\r\n    typeorm_1.OneToMany(() => character_entity_1.Character, character => character.player, { cascade: true }),\r\n    __metadata(\"design:type\", Array)\r\n], Player.prototype, \"characters\", void 0);\r\nPlayer = __decorate([\r\n    typeorm_1.Entity({ name: \"players\" })\r\n], Player);\r\nexports.Player = Player;\r\n\n\n//# sourceURL=webpack:///./src/server/entity/player.entity.ts?");

/***/ }),

/***/ "./src/server/entity/role.entity.ts":
/*!******************************************!*\
  !*** ./src/server/entity/role.entity.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Role = void 0;\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nconst character_entity_1 = __webpack_require__(/*! ./character.entity */ \"./src/server/entity/character.entity.ts\");\r\nconst organisation_entity_1 = __webpack_require__(/*! ./organisation.entity */ \"./src/server/entity/organisation.entity.ts\");\r\nlet Role = class Role {\r\n};\r\n__decorate([\r\n    typeorm_1.PrimaryGeneratedColumn({\r\n        name: \"id\",\r\n        type: \"int\"\r\n    }),\r\n    __metadata(\"design:type\", Number)\r\n], Role.prototype, \"id\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 2048,\r\n        type: \"varchar\",\r\n        name: \"description\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Role.prototype, \"description\", void 0);\r\n__decorate([\r\n    typeorm_1.Column({\r\n        length: 256,\r\n        type: \"varchar\",\r\n        name: \"name\"\r\n    }),\r\n    __metadata(\"design:type\", String)\r\n], Role.prototype, \"name\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToMany(type => character_entity_1.Character, character => character.roles),\r\n    __metadata(\"design:type\", Array)\r\n], Role.prototype, \"characters\", void 0);\r\n__decorate([\r\n    typeorm_1.ManyToMany(type => organisation_entity_1.Organisation, org => org.roles),\r\n    __metadata(\"design:type\", Array)\r\n], Role.prototype, \"organisations\", void 0);\r\nRole = __decorate([\r\n    typeorm_1.Entity({ name: \"roles\" })\r\n], Role);\r\nexports.Role = Role;\r\n\n\n//# sourceURL=webpack:///./src/server/entity/role.entity.ts?");

/***/ }),

/***/ "./src/server/server.ts":
/*!******************************!*\
  !*** ./src/server/server.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//TODO this is WIP a.f.\r\nconst orgtype_entity_1 = __webpack_require__(/*! ./entity/orgtype.entity */ \"./src/server/entity/orgtype.entity.ts\");\r\n__webpack_require__(/*! reflect-metadata */ \"./node_modules/reflect-metadata/Reflect.js\");\r\nconst typeorm_1 = __webpack_require__(/*! typeorm */ \"typeorm\");\r\nconst index_1 = __webpack_require__(/*! ./entity/index */ \"./src/server/entity/index.ts\");\r\nconst organisation_request_entity_1 = __webpack_require__(/*! ./entity/organisation-request.entity */ \"./src/server/entity/organisation-request.entity.ts\");\r\nconst organisation_request_chat_entity_1 = __webpack_require__(/*! ./entity/organisation-request-chat.entity */ \"./src/server/entity/organisation-request-chat.entity.ts\");\r\nconst organisation_request_message_entity_1 = __webpack_require__(/*! ./entity/organisation-request-message.entity */ \"./src/server/entity/organisation-request-message.entity.ts\");\r\nconst organisation_request_ownership_quantum_entity_1 = __webpack_require__(/*! ./entity/organisation-request-ownership-quantum.entity */ \"./src/server/entity/organisation-request-ownership-quantum.entity.ts\");\r\nlet dbConnection;\r\non(\"onServerResourceStart\", (resourceName) => __awaiter(void 0, void 0, void 0, function* () {\r\n    if (GetCurrentResourceName() !== resourceName) {\r\n        return;\r\n    }\r\n    yield ServerCore.getDbConnection().then(conn => {\r\n        dbConnection = conn;\r\n        ServerCore.registerEventHandlers();\r\n        emitNet(\"rz:server:client://bizman/init\", -1);\r\n    });\r\n}));\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nclass ServerCore {\r\n    static getDbConnection() {\r\n        return typeorm_1.createConnection({\r\n            \"type\": \"mysql\",\r\n            \"host\": \"localhost\",\r\n            \"port\": 3306,\r\n            \"username\": \"root\",\r\n            \"password\": \"degenerate\",\r\n            \"database\": \"rz_test\",\r\n            \"synchronize\": true,\r\n            \"logging\": true,\r\n            \"logger\": \"advanced-console\",\r\n            \"entities\": [\r\n                index_1.Player,\r\n                index_1.Character,\r\n                orgtype_entity_1.OrgType,\r\n                index_1.Organisation,\r\n                index_1.Permission,\r\n                index_1.Role,\r\n                organisation_request_entity_1.OrganisationRequest,\r\n                organisation_request_chat_entity_1.OrganisationRequestChat,\r\n                organisation_request_message_entity_1.OrganisationRequestChatMessage,\r\n                organisation_request_ownership_quantum_entity_1.OrganisationRequestOwnershipQuantum\r\n            ],\r\n            \"migrations\": [\r\n                \"src/server/migration/**/*.ts\"\r\n            ],\r\n            \"subscribers\": [\r\n                \"src/server/subscriber/**/*.ts\"\r\n            ],\r\n            \"cli\": {\r\n                \"entitiesDir\": \"src/server/entity\",\r\n                \"migrationsDir\": \"src/server/migration\",\r\n                \"subscribersDir\": \"src/server/subscriber\"\r\n            }\r\n        }).catch(error => {\r\n            console.error(JSON.stringify(error));\r\n            return error;\r\n        });\r\n    }\r\n    static getPlayerWithPrimaryId(primaryFiveMId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let dbPlayer;\r\n            dbPlayer = yield dbConnection.getRepository(index_1.Player).findOne({\r\n                where: {\r\n                    primaryFiveMId\r\n                },\r\n                relations: ['characters', 'characters.roles']\r\n            }).catch(err => {\r\n                console.error(JSON.stringify(err));\r\n                return err;\r\n            });\r\n            return dbPlayer;\r\n        });\r\n    }\r\n    static getPlayerFromSource(source) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const playerIdCount = GetNumPlayerIdentifiers(source);\r\n            let dbPlayer;\r\n            for (let idx = 0; idx < playerIdCount; idx++) {\r\n                const id = GetPlayerIdentifier(source, idx);\r\n                //TODO identify players using a (license, license2) compound primary id\r\n                if (/license2:/.test(id)) {\r\n                    dbPlayer = yield dbConnection.getRepository(index_1.Player).findOne({\r\n                        where: {\r\n                            primaryFiveMId: id\r\n                        },\r\n                        relations: ['characters', 'characters.roles']\r\n                    }).catch(err => {\r\n                        console.error(JSON.stringify(err));\r\n                        return err;\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n            return dbPlayer;\r\n        });\r\n    }\r\n    static createPlayerEntity(primaryFiveMId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const newPlayer = new index_1.Player();\r\n            newPlayer.primaryFiveMId = primaryFiveMId;\r\n            const char = new index_1.Character();\r\n            char.firstName = 'JOHN';\r\n            char.lastName = 'SMITH';\r\n            yield dbConnection.getRepository(index_1.Character).save(char);\r\n            newPlayer.characters = [char];\r\n            return dbConnection.getRepository(index_1.Player).save(newPlayer).then(saved => {\r\n                return dbConnection.getRepository(index_1.Player).findOne({\r\n                    where: {\r\n                        primaryFiveMId: primaryFiveMId\r\n                    },\r\n                    relations: ['characters', 'characters.roles']\r\n                }).catch(err => {\r\n                    console.error(JSON.stringify(err));\r\n                    return err;\r\n                });\r\n            }).catch(err => {\r\n                console.error(JSON.stringify(err));\r\n                return err;\r\n            });\r\n        });\r\n    }\r\n    static registerEventHandlers() {\r\n        on(\"playerConnecting\", (playerName, kickFn, deferrals) => __awaiter(this, void 0, void 0, function* () {\r\n            deferrals.defer();\r\n            yield sleep(0);\r\n            deferrals.update(`Your data is being loaded`);\r\n            const playerIdCount = GetNumPlayerIdentifiers(source);\r\n            for (let idx = 0; idx < playerIdCount; idx++) {\r\n                const id = GetPlayerIdentifier(source, idx);\r\n                //TODO identify players using a (license, license2) compound primary id\r\n                if (/license2:/.test(id)) {\r\n                    let dbPlayer = yield dbConnection.getRepository(index_1.Player).findOne({\r\n                        where: {\r\n                            primaryFiveMId: id\r\n                        },\r\n                        relations: ['characters', 'characters.roles']\r\n                    }).catch(err => {\r\n                        console.error(JSON.stringify(err));\r\n                        return err;\r\n                    });\r\n                    if (!dbPlayer) {\r\n                        yield this.createPlayerEntity(id);\r\n                    }\r\n                    deferrals.done();\r\n                    return;\r\n                }\r\n            }\r\n            deferrals.done(\"Could not properly identify your identity. Make sure Steam is running.\");\r\n        }));\r\n        on(\"onServerResourceStop\", (resName) => __awaiter(this, void 0, void 0, function* () {\r\n            if (GetCurrentResourceName() !== resName) {\r\n                return;\r\n            }\r\n            yield (dbConnection === null || dbConnection === void 0 ? void 0 : dbConnection.close());\r\n        }));\r\n        onNet('rz:client:server://bizman/started', () => __awaiter(this, void 0, void 0, function* () {\r\n            const dbPlayer = yield this.getPlayerFromSource(source);\r\n            dbPlayer.sessionSourceId = source;\r\n            yield dbConnection.getRepository(index_1.Player).save(dbPlayer);\r\n            emitNet(\"rz:server:client://bizman/init\", source);\r\n        }));\r\n        onNet(\"rz:client:server://core/player/data\", () => __awaiter(this, void 0, void 0, function* () {\r\n            const playerIdCount = GetNumPlayerIdentifiers(source);\r\n            for (let idx = 0; idx < playerIdCount; idx++) {\r\n                const id = GetPlayerIdentifier(source, idx);\r\n                //TODO identify players using a (license, license2) compound primary id\r\n                if (/license2:/.test(id)) {\r\n                    let dbPlayer = yield dbConnection.getRepository(index_1.Player).findOne({\r\n                        where: {\r\n                            primaryFiveMId: id\r\n                        },\r\n                        relations: ['characters', 'characters.roles']\r\n                    }).catch(err => {\r\n                        console.error(JSON.stringify(err));\r\n                        return err;\r\n                    });\r\n                    console.log(JSON.stringify(`sending back ${JSON.stringify(dbPlayer)}`));\r\n                    emitNet(\"rz:server:client://core/player/data\", source, dbPlayer);\r\n                }\r\n            }\r\n        }));\r\n        onNet(\"rz:client:server//core/player/all/character/all\", () => __awaiter(this, void 0, void 0, function* () {\r\n            const chars = yield dbConnection.getRepository(index_1.Character).find({\r\n                relations: ['roles']\r\n            });\r\n            emitNet(\"rz:server:client//core/player/all/character/all\", source, chars);\r\n        }));\r\n        onNet(\"rz:client:server://bizman/business/all\", () => __awaiter(this, void 0, void 0, function* () {\r\n            let orgs = yield dbConnection.getRepository(index_1.Organisation).find({\r\n                relations: ['roles', 'characters', 'orgTypes']\r\n            });\r\n            //TODO only get self orgs\r\n            emitNet(\"rz:server:client://bizman/business/all\", source, orgs);\r\n        }));\r\n        onNet(\"rz:client:server://bizman/business/data\", (data) => __awaiter(this, void 0, void 0, function* () {\r\n            //TODO only get self orgs\r\n            const org = yield dbConnection.getRepository(index_1.Organisation).findOne({\r\n                relations: ['roles', 'characters', 'orgTypes'],\r\n                where: {\r\n                    id: Number.parseInt(data.id)\r\n                }\r\n            });\r\n            emitNet(\"rz:server:client://bizman/business/data\", source, org);\r\n        }));\r\n        onNet(\"rz:client:server://orgman/organisation/request/get/all\", (data) => __awaiter(this, void 0, void 0, function* () {\r\n            let dbPlayer = yield this.getPlayerFromSource(source);\r\n            if (!dbPlayer) {\r\n                //TODO emit error\r\n                emitNet(\"rz:server:client://orgman/organisation/request/get/all/failed\", source);\r\n                return;\r\n            }\r\n            const creator = dbPlayer.characters.find(char => char.id == data.charId);\r\n            if (!creator) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/get/all/failed\", source);\r\n                return;\r\n            }\r\n            //TODO optimize\r\n            const orgRequests = yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).find({\r\n                relations: ['orgTypes', 'participants', 'creator']\r\n            });\r\n            const filteredOrgReqs = orgRequests.filter(orgReq => {\r\n                if (orgReq.participants.find(char => char.id === data.charId)) {\r\n                    return true;\r\n                }\r\n                if (orgReq.creator.id === data.charId) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            emitNet(\"rz:server:client://orgman/organisation/request/get/all\", source, filteredOrgReqs || []);\r\n        }));\r\n        onNet(\"rz:client:server://orgman/organisation/request/management/get/all\", (data) => __awaiter(this, void 0, void 0, function* () {\r\n            var _a;\r\n            const dbPlayer = yield this.getPlayerFromSource(source);\r\n            if (!dbPlayer) {\r\n                //TODO emit error\r\n                emitNet(\"rz:server:client://orgman/organisation/request/management/get/all/failed\", source);\r\n                return;\r\n            }\r\n            const creator = dbPlayer.characters.find(char => char.id == data.charId);\r\n            const orgRequests = yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).find({\r\n                relations: ['orgTypes', 'creator', 'participants']\r\n            });\r\n            //TODO get judge role dynamically\r\n            const isAuthorised = ((_a = creator === null || creator === void 0 ? void 0 : creator.roles) === null || _a === void 0 ? void 0 : _a.find(role => role.id === 1)) ? true : false;\r\n            if (!creator || !isAuthorised) {\r\n                emitNet(\"rz:client:server://orgman/organisation/request/management/get/all/failed\", source);\r\n                return;\r\n            }\r\n            emitNet(\"rz:server:client://orgman/organisation/request/management/get/all\", source, orgRequests || []);\r\n        }));\r\n        onNet(\"rz:client:server://orgman/organisation/request/get/single\", (data) => __awaiter(this, void 0, void 0, function* () {\r\n            let dbPlayer = yield this.getPlayerFromSource(source);\r\n            if (!dbPlayer) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/get/single/failed\", source);\r\n                return;\r\n            }\r\n            yield dbConnection.transaction((manager) => __awaiter(this, void 0, void 0, function* () {\r\n                let orgReq = yield manager.getRepository(organisation_request_entity_1.OrganisationRequest).findOne({\r\n                    where: { id: data.id },\r\n                    order: {\r\n                        chat: \"ASC\"\r\n                    },\r\n                    lock: {\r\n                        mode: 'pessimistic_write'\r\n                    },\r\n                    relations: ['orgTypes', 'creator', 'participants', 'participants.roles', 'chat', 'chat.messages', 'chat.messages.sender', 'ownershipQuantums', 'ownershipQuantums.character']\r\n                }).catch(err => {\r\n                    console.error(JSON.stringify(err));\r\n                    return err;\r\n                });\r\n                if (!orgReq.participants.find(char => char.id === data.currentCharId)) {\r\n                    emitNet(\"rz:server:client://orgman/organisation/request/get/single/failed\", source);\r\n                    return;\r\n                }\r\n                const possibleParticipants = yield manager.getRepository(index_1.Character).find({\r\n                    relations: ['roles']\r\n                });\r\n                //TODO optimize this\r\n                //TODO get judge role dynamically\r\n                let judgeCharacters = possibleParticipants.filter(char => char.roles.find(role => role.id === 1));\r\n                //filter first judge-created request participant out of the array so that the entry will not be duplicated in the db\r\n                const idxToRemove = judgeCharacters.findIndex(judgeChar => judgeChar.id === orgReq.creator.id);\r\n                if (idxToRemove >= 0) {\r\n                    judgeCharacters.splice(idxToRemove, 1);\r\n                }\r\n                const judgesToAdd = [];\r\n                judgeCharacters.forEach(judge => {\r\n                    if (!orgReq.participants.find(participant => participant.id === judge.id)) {\r\n                        judgesToAdd.push(judge);\r\n                    }\r\n                });\r\n                if ((judgesToAdd === null || judgesToAdd === void 0 ? void 0 : judgesToAdd.length) > 0) {\r\n                    orgReq.participants.push(...judgesToAdd);\r\n                    //TODO this could be an issue\r\n                    //if 2 people try to update at the same time, it becomes a race condition\r\n                    orgReq = yield manager.getRepository(organisation_request_entity_1.OrganisationRequest).save(orgReq);\r\n                }\r\n                const orgReqResponse = Object.assign(Object.assign({}, orgReq), { possibleParticipants });\r\n                emitNet(\"rz:server:client://orgman/organisation/request/get/single\", source, orgReqResponse);\r\n            }));\r\n        }));\r\n        onNet(\"rz:client:server://orgman/organisation/request/create\", (data) => __awaiter(this, void 0, void 0, function* () {\r\n            let dbPlayer = yield this.getPlayerFromSource(source);\r\n            if (!dbPlayer) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/failed\", source, []);\r\n                return;\r\n            }\r\n            const creator = dbPlayer.characters.find(char => char.id == data.creatorCharId);\r\n            if (!creator) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/failed\", source, []);\r\n                return;\r\n            }\r\n            const dbOrgTypes = yield dbConnection.getRepository(orgtype_entity_1.OrgType).find({\r\n                where: {\r\n                    id: data.organisationTypes\r\n                }\r\n            });\r\n            const orgReq = new organisation_request_entity_1.OrganisationRequest();\r\n            orgReq.name = data.name;\r\n            orgReq.denied = false;\r\n            orgReq.location = data.location;\r\n            orgReq.approved = false;\r\n            orgReq.businessPlan = data.purpose;\r\n            orgReq.creator = creator;\r\n            orgReq.orgTypes = dbOrgTypes;\r\n            const chat = new organisation_request_chat_entity_1.OrganisationRequestChat();\r\n            chat.messages = [];\r\n            const insertedChat = yield dbConnection.getRepository(organisation_request_chat_entity_1.OrganisationRequestChat).save(chat);\r\n            orgReq.chat = insertedChat;\r\n            orgReq.participants = data.participants;\r\n            orgReq.totalShares = data.totalShares;\r\n            let inserted = yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).save(orgReq);\r\n            let quantums = [];\r\n            for (let index = 0; index < data.owners.length; index++) {\r\n                let owner = data.owners[index];\r\n                let newOrgOwnerQuantum = new organisation_request_ownership_quantum_entity_1.OrganisationRequestOwnershipQuantum();\r\n                newOrgOwnerQuantum.flatShares = owner.flatShares;\r\n                newOrgOwnerQuantum.character = yield dbConnection.getRepository(index_1.Character).findOne({ where: { id: owner.id } });\r\n                quantums.push(newOrgOwnerQuantum);\r\n            }\r\n            inserted.ownershipQuantums = quantums;\r\n            inserted = yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).save(orgReq);\r\n            emitNet(\"rz:server:client://orgman/organisation/request/create\", source, inserted);\r\n        }));\r\n        onNet(\"rz:client:server://orgman/organisation/types/get/all\", (_) => __awaiter(this, void 0, void 0, function* () {\r\n            const orgTypes = yield dbConnection.getRepository(orgtype_entity_1.OrgType).find();\r\n            emitNet(\"rz:server:client://orgman/organisation/types/get/all\", source, orgTypes);\r\n        }));\r\n        onNet(\"rz:client:server://orgman/organisation/request/chat/message/post\", (data) => __awaiter(this, void 0, void 0, function* () {\r\n            const orgReq = yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).findOne({\r\n                where: {\r\n                    id: data.orgRequestId\r\n                },\r\n                relations: ['creator', 'chat', 'chat.messages', 'participants', 'creator.player', 'participants.player']\r\n            });\r\n            const senderChar = orgReq.participants.find(char => char.id === data.charId);\r\n            if (!senderChar) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/chat/message/post/failed\", source);\r\n                return;\r\n            }\r\n            const messageObj = new organisation_request_message_entity_1.OrganisationRequestChatMessage();\r\n            messageObj.datetime = new Date();\r\n            messageObj.message = data.message;\r\n            //TODO active character\r\n            messageObj.sender = senderChar;\r\n            const savedMsgObj = yield dbConnection.getRepository(organisation_request_message_entity_1.OrganisationRequestChatMessage).save(messageObj);\r\n            orgReq.chat.messages.push(savedMsgObj);\r\n            yield dbConnection.getRepository(organisation_request_chat_entity_1.OrganisationRequestChat).save(orgReq.chat);\r\n            emitNet(\"rz:server:client://orgman/organisation/request/chat/message/post/success\", source, savedMsgObj);\r\n        }));\r\n        onNet(\"rz:client:server://orgman/organisation/request/participant/add\", (data) => __awaiter(this, void 0, void 0, function* () {\r\n            const orgReq = yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).findOne({\r\n                where: {\r\n                    id: data.orgRequestId\r\n                },\r\n                relations: ['participants']\r\n            });\r\n            const charToAdd = yield dbConnection.getRepository(index_1.Character).findOne({\r\n                where: {\r\n                    id: data.participantId\r\n                }\r\n            });\r\n            if (!orgReq || !charToAdd || !orgReq.participants.find(char => char.id === data.adderId)) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/participant/add/failed\", source);\r\n                return;\r\n            }\r\n            orgReq.participants.push(charToAdd);\r\n            yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).save(orgReq);\r\n            emitNet(\"rz:server:client://orgman/organisation/request/participant/add/success\", source, charToAdd);\r\n        }));\r\n        onNet(\"rz:client:server://orgman/organisation/request/participant/remove\", (data) => __awaiter(this, void 0, void 0, function* () {\r\n            const orgReq = yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).findOne({\r\n                where: {\r\n                    id: data.orgRequestId\r\n                },\r\n                relations: ['participants']\r\n            });\r\n            const charToRemove = yield dbConnection.getRepository(index_1.Character).findOne({\r\n                where: {\r\n                    id: data.participantId\r\n                }\r\n            });\r\n            if (!orgReq || !charToRemove || !orgReq.participants.find(char => char.id === data.removerId) || !orgReq.participants.find(char => char.id === data.participantId)) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/participant/remove/failed\", source);\r\n                return;\r\n            }\r\n            const idxToRemove = orgReq.participants.findIndex(char => char.id === data.participantId);\r\n            orgReq.participants.splice(idxToRemove, 1);\r\n            yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).save(orgReq);\r\n            emitNet(\"rz:server:client://orgman/organisation/request/participant/remove/success\", source, charToRemove);\r\n        }));\r\n        onNet(\"rz:client:server://orgman/organisation/request/approve\", (data) => __awaiter(this, void 0, void 0, function* () {\r\n            var _b;\r\n            const orgReq = yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).findOne({\r\n                where: {\r\n                    id: data.orgId\r\n                },\r\n                relations: ['creator']\r\n            });\r\n            const actionChar = yield dbConnection.getRepository(index_1.Character).findOne({\r\n                where: {\r\n                    id: data.charId\r\n                },\r\n                relations: ['roles']\r\n            });\r\n            const dbPlayer = yield this.getPlayerFromSource(source);\r\n            if (!((_b = dbPlayer === null || dbPlayer === void 0 ? void 0 : dbPlayer.characters) === null || _b === void 0 ? void 0 : _b.find(char => char.id === actionChar.id))) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/approve/failed\", source);\r\n                return;\r\n            }\r\n            //TODO judge id\r\n            if (!actionChar.roles.find(role => role.id === 1)) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/approve/failed\", source);\r\n                return;\r\n            }\r\n            if (orgReq.approved || orgReq.denied) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/approve/failed\", source);\r\n                return;\r\n            }\r\n            orgReq.approved = true;\r\n            orgReq.denied = false;\r\n            yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).save(orgReq);\r\n            emitNet(\"rz:server:client://orgman/organisation/request/approve/success\", source);\r\n        }));\r\n        onNet(\"rz:client:server://orgman/organisation/request/deny\", (data) => __awaiter(this, void 0, void 0, function* () {\r\n            var _c;\r\n            const orgReq = yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).findOne({\r\n                where: {\r\n                    id: data.orgId\r\n                },\r\n                relations: ['creator']\r\n            });\r\n            const actionChar = yield dbConnection.getRepository(index_1.Character).findOne({\r\n                where: {\r\n                    id: data.charId\r\n                },\r\n                relations: ['roles']\r\n            });\r\n            const dbPlayer = yield this.getPlayerFromSource(source);\r\n            if (!((_c = dbPlayer === null || dbPlayer === void 0 ? void 0 : dbPlayer.characters) === null || _c === void 0 ? void 0 : _c.find(char => char.id === actionChar.id))) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/deny/failed\", source);\r\n                return;\r\n            }\r\n            if (orgReq.approved || orgReq.denied) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/deny/failed\", source);\r\n                return;\r\n            }\r\n            //TODO judge id\r\n            if (!actionChar.roles.find(role => role.id === 1)) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/deny/failed\", source);\r\n                return;\r\n            }\r\n            else if (orgReq.creator.id === actionChar.id) {\r\n                emitNet(\"rz:server:client://orgman/organisation/request/deny/failed\", source);\r\n                return;\r\n            }\r\n            orgReq.approved = false;\r\n            orgReq.denied = true;\r\n            yield dbConnection.getRepository(organisation_request_entity_1.OrganisationRequest).save(orgReq);\r\n            emitNet(\"rz:server:client://orgman/organisation/request/deny/success\", source);\r\n        }));\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/server/server.ts?");

/***/ }),

/***/ "typeorm":
/*!**************************!*\
  !*** external "typeorm" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"typeorm\");\n\n//# sourceURL=webpack:///external_%22typeorm%22?");

/***/ })

/******/ });